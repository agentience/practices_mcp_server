[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-server-practices"
version = "0.5.0"
description = "MCP server for development practices"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Agentience", email = "info@agentience.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp[cli]>=1.3.0",
    "GitPython>=3.1.30",
    "PyYAML>=6.0",
    "bump2version>=1.0.1",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.2.0",
    "mypy>=1.8.0",
    "ruff>=0.2.0",
    "build>=1.2.2.post1",
]

[project.scripts]
practices = "mcp_server_practices.cli:main"
mcp-server-practices = "mcp_server_practices:mcp_server_practices_main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["mcp_server_practices"]
include-package-data = true

[tool.setuptools.package-data]
mcp_server_practices = ["bin/*"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "*.pyd", "__pycache__"]

[tool.uv]
managed = true

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.hatch.env]
scripts = { install_full = """
#!/bin/sh
set -e
echo "Cleaning previous build artifacts..."
rm -rf dist/ build/ *.egg-info
echo "Building package..."
python -m build
WHEEL_FILE=$(ls dist/*.whl | tail -n 1)
echo "Installing package from wheel: $WHEEL_FILE"
uv tool uninstall mcp-server-practices 2>/dev/null || true
uv tool install "$WHEEL_FILE" -v
echo "Installation complete!"
""" }
